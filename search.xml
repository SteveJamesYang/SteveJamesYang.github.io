<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo-github博客创建全过程]]></title>
    <url>%2F2018%2F07%2F08%2Fhexo-github-to-build-blog%2F</url>
    <content type="text"><![CDATA[本文详述hexo的安装步骤。 安装 Node.js找到最新的下载地址，用 wget 命令下载到本地 $ wget https://nodejs.org/dist/v4.4.4/node-v4.4.4-linux-x64.tar.xz解压命令，是 xz 文件。所以，12xz -d node-v4.4.4-linux-x64.tar.xz tar -xvf node-v4.4.4-linux-x64.tar 或者 $ tar -xvJf node-v4.4.4-linux-x64.tar.xz文件就被解压到当前文件夹下了。然后进行重命名并移动到本地相应目录。12mv node-v4.4.4-linux-x64 node-v4.4.4mv node-v4.4.4 /usr/local/node 接下来配置环境变量。编辑 /etc/profile (使用vim) $ vim /etc/profile在底部添加 PATH 变量 $ export PATH=$PATH:/usr/local/node/bin保存退出，先按exit键，再按shift+：wq最后保存并使其生效即可 $ source /etc/profile 安装 Hexo这里我是在~/目录下操作的！ 创建目录 $ mkdir hexo 切换目录 $ cd hexo 安装Git(已安装可跳过) $ yum install git-core 安装 Hexo $ npm install -g hexo-cli 初始化 Hexo $ hexo init 安装插件 12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked --savenpm install hexo-renderer-stylus --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save Deployment设置这里设置了Git，一定要注意不要写错了，否则部署到Github上会出问题 12345deploy: type: git repo: git@github.com:username/username.github.io.git branch: master message: &apos;站点更新:&amp;#123;&amp;#123;now&amp;#40;&quot;YYYY-MM-DD HH/mm/ss&quot;&amp;#41;&amp;#125;&amp;#125;&apos; 部署到 GitHub 配置本机全局 git 环境（如果已经配置过请忽略）首先请使用邮箱注册 github 账号，否则会影响下面操作，记住你注册的邮箱。另外，请在 VPS 上设置你的 git ,命令如下： 12git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot; 生成 SSH 秘钥先确定你的 VPS 有没有生成过 ssh 的 key，验证 $ less ~/.ssh/github/id_rsa.pub如果报错执行下面代码(其中，-C后面加你在github的用户名邮箱，这样公钥才会被github认可) $ ssh-keygen -t rsa -C example@163.com 查看 公钥内容 稍后加入Github 账户的 sshkey中命令如下： $ less ~/.ssh/id_rsa.pub你会看到一堆代码(这正是SSH密钥)当然，也有可能遇到这种情况，你可以选择覆盖（确认没有人使用当前的 SSH 秘钥），或者不覆盖 把你的 SSH key 添加到 ssh-agent输入如下命令 $ ssh-agent -s会响应：echo Agent pid [端口号] 接下来输入如下命令，把你的 SSH key 添加到 ssh-agent输入如下命令 $ ssh-add ~/.ssh/github/id_rsa如果他提示如下，说明不能打开您身份验证的代理Could not open a connection to your authentication agent.只需要输入如下命令即可解决： $ ssh-agnet bash当文件存在时，会提示你要不要覆盖 测试是否连接成功在 Git Bash 中输入： $ ssh -T git@github.comssh尝试连接到GitHub你可能看到下面的警告：The authenticity of host ‘github.com(207.97.227.239)’ can’t be established.RSA key fingerprint is SHA256:nJKJFKDnDLFJDndndnfkdfldjfldldfjld.Are you sure you want to continue connecting (yes/no)?确定提示信息里的指纹（fingerprint）是否匹配，如果匹配就键入｀yes｀，将得到：Hi [你的用户名]! You’ve successfully authenticated, but GitHub does not provide shell access. 创建博客工程博客工程创建要注意！！！ 创建一个新项目，项目名称为 用户名. github.io ，比如我的 Github 用户名是 stevejamesyang，则创建的项目名为 stevejamesyang.github.io用户名是你的 github 用户名哦！千万别弄错了，不然访问不到的！git@github.com:username/username.github.io所以我的是 git@github.com:stevejamesyang/stevejamesyang.github.io.git 将 ssh 秘钥添加到 github 中生成后，需要将秘钥放到 github 上去，登录你的 github 账号进入秘钥设置面板:https://github.com/settings/ssh在执行less ~/.ssh/github/id_rsa.pub你会看到一堆长密码不好意思，我打码了这一段密码全部复制到 github 上 配置 Hexo，编译与部署还记得我们在_config.yml 里Deployment的配置吗？最后一步，编译，上传静态代码 编译执行以下命令以生成静态html文件 1hexo generate 本地预览 1hexo server 在主机的hexo目录下 执行以下命令将自动更新到Github 1hexo d 修改主题和配置配置文件安装主题 NexT需要说明的是，我们现在在目录 hexo 下 git clone https://github.com/iissnan/hexo-theme-next themes/next然后在目录 hexo 下的_config.yml 中找到 theme: 修改后面的参数，默认是 landscapetheme: next 配置主题这个内容另外用一篇文章说明。 找主题https://hexo.io/themes/]]></content>
      <categories>
        <category>网站相关</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github pages</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欢迎]]></title>
    <url>%2F2018%2F07%2F07%2F%E6%AC%A2%E8%BF%8E%2F</url>
    <content type="text"><![CDATA[欢迎来到SJY的个人博客。在这里，我将主要谈及四个方面的内容： 科技。这个目录主要用来收录有关人工智能的文章。 人文。主要用来收录好文。 历史。诠释历史。 生活。生活很美好。]]></content>
      <categories>
        <category>首页</category>
      </categories>
      <tags>
        <tag>首页</tag>
      </tags>
  </entry>
</search>
